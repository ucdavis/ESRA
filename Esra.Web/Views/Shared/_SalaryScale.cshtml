@using FluentNHibernate.Conventions
@model Esra.Web.Models.SalaryScaleViewModel
@{
    if (Model.SalaryScale != null && Model.SalaryScale.TitleCode != null)
    {
    <fieldset class="display-form">
        <legend style="font-weight: bold; font-size: large;">Campus-wide Salary Scale</legend>
        <ul>
            <li>
                <div class="display-label">
                    Title Code
                </div>
                <div class="display-details">@Model.SalaryScale.TitleCode</div>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                <div class="display-label">
                    Payroll Title
                </div>
                <div class="display-details">@Model.SalaryScale.Title.PayrollTitle</div>
            </li>
            <li>
                <div class="display-label">
                    Effective Date
                </div>
                <div class="display-details">@String.Format("{0:MM/dd/yyyy}", Model.SalaryScale.EffectiveDate)</div>
            </li>

        <li>
	        <div class="display-label">
		        Bargaining Code
	        </div>
	        <div class="display-details">@Model.SalaryScale.BargainingCode</div>
        </li>
        <li>
	        <div class="display-label">
		        Represented
	        </div>
	        <div class="display-details">@Model.SalaryScale.Represented</div>
        </li>
            @if (Model.SalaryScale.SalarySteps.Count > 0)
            {
	            <li>
		            <div class="display-label">
			            Salary Admin Plan
		            </div>
		            <div class="display-details">@Model.SalaryScale.SalarySteps[0].SalaryAdminPlan</div>
	            </li>
                <li>
                    <div class="display-label">
                        Salary Grade
                    </div>
                    <div class="display-details">@Model.SalaryScale.SalarySteps[0].SalaryGrade</div>
                </li>
	            <li>
                    <div>
                        <table>
                            <tbody>
                                <tr>
                                <tr>
                            <tr>
	                            <th>
		                            Step
	                            </th>
	                            <th>
		                            Annual
	                            </th>
	                            <th>
		                            Monthly
	                            </th>
	                            <th>
		                            Hourly
	                            </th>
                            </tr>
                                @{var i = 0;
                                    var middleStep = Model.SalaryScale.NumSalarySteps / 2;}
                                @foreach (Esra.Core.Domain.SalaryStep step in Model.SalaryScale.SalarySteps)
                                {
                                    if (i == middleStep)
                                    {
	                                    <tr>
		                                    <td>
			                                    <strong>@step.StepNumber</strong>
		                                    </td>
		                                    <td>
			                                    <strong>@String.Format("{0:c}", step.Annual)</strong>
		                                    </td>
		                                    <td>
			                                    <strong>@String.Format("{0:c}", step.Monthly)</strong>
		                                    </td>
		                                    <td>
			                                    <strong>@String.Format("{0:c}", step.Hourly)</strong>
		                                    </td>
	                                    </tr>
                                    }
                                    else
                                    {
	                                    <tr>
		                                    <td>
			                                    @step.StepNumber
		                                    </td>
		                                    <td>
			                                    @String.Format("{0:c}", step.Annual)
		                                    </td>
		                                    <td>
			                                    @String.Format("{0:c}", step.Monthly)
		                                    </td>
		                                    <td>
			                                    @String.Format("{0:c}", step.Hourly)
		                                    </td>
	                                    </tr>
                        }
                        i = i + 1;
                    }
                            </tbody>
                        </table>
                    </div>
                </li>
            }
            @if (Model.SalaryScale.SalaryGrades.Count > 0)
            {
                foreach (Esra.Core.Domain.SalaryGrade grade in Model.SalaryScale.SalaryGrades)
                {

                    @*<li>
                 <div class="display-label">
                     Salary Grade</div>
                 <div class="display-details">@Model.SalaryScale.SalaryGrade[0].SalaryGrade</div>
                </li>*@
                    <li>
                        <div>
                            <table>
                                <tbody>
                                    <tr>
                                        <div class="display-label">
                                            Salary Admin Plan
                                        </div>
                                        <div class="display-details">@grade.SalaryAdminPlan</div>
                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                        <div class="display-label">
                                            Salary Grade
                                        </div>
                                        <div class="display-details">@grade.Grade</div>
                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    </tr>
                    <tr>
                        <th>
                            Quartile
                        </th>
                        <th>
                            Annual
                        </th>
                        <th>
                            Monthly
                        </th>
                        <th>
                            Hourly
                        </th>
                    </tr>
                    <tr>
                        <th>
                            Min
                        </th>
                        <td>
                            @String.Format("{0:c}", grade.MinAnnual)
                    </td>
                    <td>
                        @String.Format("{0:c}", grade.MinMonthly)
                </td>
                <td>
                    @String.Format("{0:c}", grade.MinHourly)
            </td>
        </tr>
        <tr>
            <th>
                First
            </th>
            <td>
                @String.Format("{0:c}", grade.FirstQrtleAnnual)
        </td>
        <td>
            @String.Format("{0:c}", grade.FirstQrtleMonthly)
        </td>
        <td>
            @String.Format("{0:c}", grade.FirstQrtleHourly)
        </td>
        </tr>
        <tr>
            <th>
                Mid
            </th>
            <td>
                @String.Format("{0:c}", grade.MidAnnual)
        </td>
        <td>
            @String.Format("{0:c}", grade.MidMonthly)
        </td>
        <td>
            @String.Format("{0:c}", grade.MidHourly)
        </td>
        </tr>
        <tr>
            <th>
                Third
            </th>
            <td>
                @String.Format("{0:c}", grade.ThirdQrtleAnnual)
        </td>
        <td>
            @String.Format("{0:c}", grade.ThirdQrtleMonthly)
        </td>
        <td>
            @String.Format("{0:c}", grade.ThirdQrtleHourly)
        </td>
        </tr>
        <tr>
            <th>
                Max
            </th>
            <td>
                @String.Format("{0:c}", grade.MaxAnnual)
        </td>
        <td>
            @String.Format("{0:c}", grade.MaxMonthly)
        </td>
        <td>
            @String.Format("{0:c}", grade.MaxHourly)
        </td>
        </tr>
        </tbody>
        </table>
        </div>
        </li>
    }
}
        @*<li>
        <div class="display-label">
            Labor Market WAS</div>
        <div class="display-details">@String.Format("{0:c}", Model.SalaryScale.LaborMarketWAS)</div>
    </li>
    <li>
        <div class="display-label">
            Labor Market Mid Annual</div>
        <div class="display-details">@String.Format("{0:c}", Model.SalaryScale.LaborMarketMidAnnual)</div>
    </li>*@
            <li>
                <div class="display-label">
                    College Average Annual
                </div>
                <div class="display-details">
                    @if (Model.CollegeAverages != null && Model.CollegeAverages.Count > 0)
                    {
                        <table style="border-style: none;">
                            <tbody>
                                @foreach (Esra.Core.Domain.CollegeAverage avg in Model.CollegeAverages)
                                {
                                    <tr>
                                        <td>
                                            @avg.School.Abbreviation:
                                    </td>
                                    <td>
                                        @String.Format("{0:c}", @avg.CollegeAverageAnnual)
                                </td>
                            </tr>
                        }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <text>No College Average(s) Available</text>
                    }
                </div>
                @*<div class="display-label">
                College Average Annual</div>
            <div class="display-details">@String.Format("{0:c}", Model.SalaryScale.CollegeAverageAnnual)</div>*@
            </li>
            <li>
                <div class="display-label">
                    Multi-College Average Annual
                </div>
                <div class="display-details">@String.Format("{0:c}", Model.SalaryScale.CampusAverageAnnual)</div>
            </li>
        </ul>
    </fieldset>
    }
}