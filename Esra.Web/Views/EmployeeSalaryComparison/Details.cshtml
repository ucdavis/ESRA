@model Esra.Web.Models.EmployeeSalaryComparisonViewModel
@using System.Text;
@{
    ViewBag.Title = "Employee Salary Comparison";
}
@section SubNav
{
    <ul class="navigation">
        <li>@Html.ActionLink("Edit", "Edit", new { /* id=Model.PrimaryKey */ }) </li>
        <li>@Html.ActionLink("Back to List", "Index")</li>
    </ul>
}
<div id="salary-scale">
    @Html.AntiForgeryToken()
    @Html.Partial("_SalaryScaleSelectLists", Model.SalaryScaleViewModel)
    @*<div id="salaryscale-result" />*@
    <script language="JavaScript" type="text/javascript">
        $(function () {
            var dtable = $('#employees').dataTable({
                "bProcessing": true,
                //"bServerSide": true,
                "bJQueryUI": true,
                "sPaginationType": "full_numbers"
            });

            $('#employees a.edit-row').live('click', function (e) {
                //var row = this.parentNode.parentNode;
                var row = $(this).parents("tr");

                dtable.fnOpen(row[0], fnFormatDetails(dtable, row), 'details');
                e.preventDefault();
            });

            $('#employees a.close-row').live('click', function (e) {
                var row = this.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode.previousSibling;
                dtable.fnClose(row);
                e.preventDefault();
            });

            $('input.save-employee', '#employees').live('click', function (e) {
                var rowId = $(this).data("id");
                var employeeRow = $('tr[data-id=' + rowId + ']', '#employees');
                var row = employeeRow.next();

                var data = { //Grab the data out of the rows
                    id: rowId,
                    hireDate: row.find('.hire-date').val(),
                    titleDate: row.find('.title-date').val(),
                    experienceDate: row.find('.experience-date').val(),
                    hireChecked: row.find('.hire-checked').is(":checked"),
                    titleChecked: row.find('.title-checked').is(":checked"),
                    deptComments: row.find('.dept-comments').val(),
                    deansComments: row.find('.deans-comments').val()
                }
                console.dir(data); //TODO: Remove data check

                row.html("<tr><td>Saving Data.......<td></tr>");

                $.post(
                    '@Url.Action("Edit")',
                    data,
                    function (result) {
                        var resultrow = employeeRow[0];
                        if (!result) {
                            alert("There was a problem saving the data for this employee");
                        }
                        else {
                            //update the row
                            dtable.fnUpdate(data.hireDate, resultrow, 6, false, false); //False params to not redraw until second call
                            dtable.fnUpdate(data.titleDate, resultrow, 8, false, false);
                            dtable.fnUpdate(data.experienceDate, resultrow, 10, false, false);
                            dtable.fnUpdate(data.deptComments, resultrow, 13, false, false);
                            dtable.fnUpdate(data.deansComments, resultrow, 14);

                            //updated the headers for the pps checked/adjusted columns
                            if (data.hireChecked) {
                                employeeRow.find("td.hire-date").addClass("date-checked");
                            }
                            else {
                                employeeRow.find("td.hire-date").removeClass("date-checked");
                            }
                            if (data.titleChecked) {
                                employeeRow.find("td.title-date").addClass("date-checked");
                            }
                            else {
                                employeeRow.find("td.title-date").removeClass("date-checked");
                            }
                            if (result.hireAdjusted) {
                                employeeRow.find("td.hire-date").addClass("date-adjusted");
                            }
                            else {
                                employeeRow.find("td.hire-date").removeClass("date-adjusted");
                            }
                            if (result.titleAdjusted) {
                                employeeRow.find("td.title-date").addClass("date-adjusted");
                            }
                            else {
                                employeeRow.find("td.title-date").removeClass("date-adjusted");
                            }
                        }
                        dtable.fnClose(resultrow);
                    }
                );

                e.preventDefault();
            });

            $('#titlecode-drop-down').change(function () {
                //debugger;

                var selectedText = $(this).find('option:selected').text();
                var otherControl = $('#title-drop-down');
                otherControl.val($(this).val());

                var token = $('[name=__RequestVerificationToken]').val();

                $.post('/SalaryScale/_SalaryScale',
                { __RequestVerificationToken: token, titleCode: $(this).val() },
                function (result) {
                    if (result.length > 50) {
                        $("#salary-scale-partial").html(result.toString());
                    }
                    else {
                        $("#salary-scale-partial").html("<fieldset><h3>No Salary Data Available</h3></fieldset>");
                    }
                }
            );
            });

            $('#title-drop-down').change(function () {
                //debugger;

                var selectedText = $(this).find('option:selected').text();
                var otherControl = $('#titlecode-drop-down');
                otherControl.val($(this).val());

                var token = $('[name=__RequestVerificationToken]').val();

                $.post('/SalaryScale/_SalaryScale',
                { __RequestVerificationToken: token, titleCode: $(this).val() },
                function (result) {
                    if (result.length > 50) {
                        $("#salary-scale-partial").html(result.toString());
                    }
                    else {
                        $("#salary-scale-partial").html("<fieldset><h3>No Salary Data Available</h3></fieldset>");
                    }
                }
            );
            });
        });

        function GetRow() {

        }

        /* Formating function for row details */
        function fnFormatDetails(dTable, row) {
            //debugger;
            var rowContents = row[0];
            var careerChecked = row.find(".hire-date").hasClass("date-checked");
            var apptChecked = row.find(".title-date").hasClass("date-checked");
            var rowId = row.data("id");

            var aData = dTable.fnGetData(rowContents);

            var sOut = '';
            sOut += '<table cellpadding="5" cellspacing="0" border="0" style="padding-left:50px;">';
            sOut += '<tr><td>Editing ' + aData[5] + '</td></tr>';
            sOut += '<tr><td>Hire Date: <input class="hire-date" type="text" value="' + aData[6] + '"/>&nbsp;<input class="hire-checked" type="checkbox" ' + (careerChecked ? 'checked' : String.Empty) + ' />Checked in PPS?</td></tr>';
            sOut += '<tr><td>Title Begin Date: <input class="title-date" type="text" value="' + aData[8] + '"/>&nbsp;<input class="title-checked" type="checkbox" ' + (apptChecked ? 'checked' : String.Empty) + ' />Checked in PPS?</td></tr>';
            sOut += '<tr><td>Experience Begin Date: <input class="experience-date" type="text" value="' + aData[10] + '"/></td></tr>';
            sOut += '<tr><td>Department Comments: <textarea class="dept-comments" rows="3" cols="20">' + aData[13] + '</textarea></td></tr>';
            sOut += '<tr><td>Dean\'s Office Comments: <textarea class="deans-comments" rows="3" cols="20">' + aData[14] + '</textarea></td></tr>';
            sOut += '<tr><td><input class="save-employee" data-id="' + rowId + '" type="submit" value="Save" />&nbsp;&nbsp;<a class="close-row" href="#">Close</a></td></tr>';
            sOut += '</table>';
            return sOut;
        }
    </script>
</div>
<div id="salary-scale-partial">
    @{
        @Html.Partial("_SalaryScale", Model.SalaryScaleViewModel)
    }
</div>
<div id="employee-drop-down-lists">
    @Html.Partial("_EmployeeTitleDepartmentSelectLists")
</div>
<div id="report-generation-criteria">
    @Html.Partial("_ReportGenerationCriteria")
</div>
<div id="result">
    @{
        if (Model.Employees != null && Model.Employees.Count() > 0)
        {
        @Html.Partial("_Employees")
        }
        else
        {
        <fieldset>
            <h3>
                No Employees Found</h3>
        </fieldset>
        }
    }
</div>