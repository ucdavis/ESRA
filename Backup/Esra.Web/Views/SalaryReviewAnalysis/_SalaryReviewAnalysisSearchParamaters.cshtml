@model Esra.Web.Models.SalaryReviewAnalysisViewModel
<script type="text/javascript">

    $(function () {
        $("#CreationDateString").datepicker();
    });
</script>
<div>
    <fieldset class="display-form">
        <legend style="font-weight: bold; font-size: large;">Search Parameters</legend>
        @using (@Html.BeginForm("Index", "SalaryReviewAnalysis", FormMethod.Get))
        {

            <ul>
                <li style="font-weight: bold;">@Html.Label("Search by Reference Number")</li>
                <li>
                    <div class="editor-field ui-widget">
                        @Html.DropDownListFor(x => x.SelectedReferenceNumber,
                        new SelectList(Model.FilteredSalaryReviewAnalysis,
                        "ReferenceNumber",
                        "ReferenceNumber",
                         String.IsNullOrEmpty(Model.SelectedReferenceNumber) == false ? Model.SelectedReferenceNumber : String.Empty),
             "-- Select a Reference Number --", new { id = "ddlReferenceNumber" }
                        )
                    </div>
                </li>
                <li style="font-weight: bold; font-style: italic;">@Html.Label("-- Or --")</li>
                <li style="font-weight: bold;">@Html.Label("Search by Employee")</li>
                <li>
                    <div class="editor-field ui-widget">
                        @Html.DropDownListFor(x => x.SelectedEmployee,
                        new SelectList(Model.FilteredEmployees,
                        "id",
                        "FullName",
null),
             "-- Any Employee --", new { id = "ddlEmployee" }
                        )
                    </div>
                </li>
                <li style="font-weight: bold; font-style: italic;">-- And/Or --</li>
                <li style="font-weight: bold;">@Html.Label("Search by Reviewer") &nbsp;<label style="font-style: italic;">(Created
                    By)</label></li>
                <li>
                    <div class="editor-field ui-widget">
                        @Html.DropDownListFor(x => x.SelectedUser,
                        new SelectList(Model.FilteredUsers,
                        "Id",
                        "FullName",
  null),
             "-- Any Reviewer --", new { id = "ddlCreatedBy" }
                        )
                    </div>
                </li>
                <li style="font-weight: bold; font-style: italic;">-- And/Or --</li>
                <li style="font-weight: bold;">@Html.Label("Search by Creation Date")&nbsp;
                    <label style="font-style: italic;">
                        (Use&nbsp;today&#39;s&nbsp;date&nbsp;to&nbsp;search&nbsp;for&nbsp;any&nbsp;date)</label></li><li>
                            <div class="editor-field">
                                @Html.TextBoxFor(a => a.CreationDateString)
                            </div>
                        </li>
                <li>
                    <br />
                    <center>
                        <input type="submit" id="btnFindSRA" value="Find Salary Review Analysis" />
                        &nbsp; &nbsp; &nbsp; &nbsp;<input type="reset" value="Reset Selection(s)" onclick="resetForm(this.form); return false;" />
                    </center>
                </li>
            </ul>

        }
    </fieldset>
    <script language="JavaScript" type="text/javascript">
    <!--

        $(document).ready(function () {

        });

        $("#toggle").click(function () {
            $("#ddlCreatedBy").toggle();
            return false;
        });

        $("#btnFindSRA").click(function () {
            // reset the ddlReferenceNumber when the submit button is "pressed"
            var selectedReferenceNum = $('#ddlReferenceNumber')[0];
            selectedReferenceNum.selectedIndex = 0;
            selectedReferenceNum.options[0].selected = true;
            $(this).parents('form').submit();
        });

        // controlId = id of the control you wish to set.
        // selectedTextValue = the text value you wish to display (or not), i.e. "".
        function setAutocomplete(controlId, selectedTextValue) {
            var autocompleteLabels = $("input.ui-autocomplete-input"); //
            autocompleteLabels.each(function (i, val) {
                //var id = 'title-drop-down'; // name of auto complete control we're looking for
                var prevSiblingId = $(this).prev().attr('id'); // id of previous sibling
                if (prevSiblingId != null && prevSiblingId == controlId) {
                    // if the previous control's id matches the id
                    // then set the sibling's text value:
                    var myVar = $(val);
                    myVar.val(selectedTextValue);
                } // if
            }); // each
        }; // end setAutocomplete

        function resetForm(form) {
            resetFields(form, true);
        };

        function resetFields(form, resetReferenceNumber) {
            //debugger;

            if (resetReferenceNumber) {
                var selectedReferenceNumber = form.ddlReferenceNumber;
                selectedReferenceNumber.selectedIndex = 0;
                selectedReferenceNumber.options[0].selected = true;

                setAutocomplete("ddlReferenceNumber", selectedReferenceNumber.options[0].text);
            }

            var selectedEmployee = form.ddlEmployee;
            selectedEmployee.selectedIndex = 0;
            selectedEmployee.options[0].selected = true;
            setAutocomplete("ddlEmployee", selectedEmployee.options[0].text);

            var selectedUser = form.ddlCreatedBy;
            selectedUser.selectedIndex = 0;
            selectedUser.options[0].selected = true;
            setAutocomplete("ddlCreatedBy", selectedUser.options[0].text)

            var creationDateString = form.CreationDateString;
            creationDateString.value = getDate();

        }

        function getDate() {
            var today = new Date();
            var dd = today.getDate();
            var mm = today.getMonth() + 1; //January is 0!
            var yyyy = today.getFullYear();
            if (dd < 10) { dd = '0' + dd }
            if (mm < 10) { mm = '0' + mm }

            return mm + '/' + dd + '/' + yyyy;
        }

        $("#ddlEmployee").combobox({
            delay: 0 //,

            //            selected: function (event, ui) {
            //                // Event handling code goes here.
            //                debugger;
            //                return false;
            //            } // selected
        });     // combobox });

        $("#ddlCreatedBy").combobox({
            delay: 0
        });  // combobox });

        $("#ddlReferenceNumber").combobox({
            delay: 0,
            selected: function (event, ui) {
                // Event handling code goes here.
                resetFields($(this).parents('form')[0], false);

                $(this).parents('form').submit();

                return false;
            } // selected
        });      // combobox });

        // This allows the form to submit when a selection is made from the
        // employees drop-down.
        //        $('#ddlReferenceNumber').change(function () {
        //            var selectedEmployee = $('#ddlEmployee')[0];
        //            selectedEmployee.selectedIndex = 0;
        //            selectedEmployee.options[0].selected = true;

        //            var selectedUser = $('#ddlCreatedBy')[0];
        //            selectedUser.selectedIndex = 0;
        //            selectedUser.options[0].selected = true;

        //            var creationDateString = $('#CreationDateString')[0];
        //            creationDateString.value = getDate();

        //            $(this).parents('form').submit();
        //        });
        //-->
    </script>
</div>