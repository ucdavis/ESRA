<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2">
	<class name="CAESDO.Esra.Core.Domain.SalaryScale, CAESDO.Esra.Core" table="SalaryScale" dynamic-update="true">
		<!--<id name="id" access="field" column="SalaryScaleID" unsaved-value="0">
			<generator class="identity" />
		</id>-->
		
		<!-- This makes no sense to me, but I needed to set the composite-id unsaved-value="any"
		in order to avoid the "Unexpected row count: 0; expected: 1" error.  This seems to make a 
		difference to NHibernate of its ability to distinguish whether to do an insert or an
		update.  With it set to the default, unsaved-value="none", it "sees" the transaction (or 
		object) as "dirty" and attempts an update, which fails.-->
		<composite-id unsaved-value="any">
			<key-property name="TitleCode" column="TitleCode"/>
			<key-property name="EffectiveDate" column="EffectiveDate"/>
		</composite-id>
		
		<!-- Apparently this relationship needs to be specified as update="false" and insert="false" in order
		to avoid having the fields being present in the insert/update statement twice.  This, I suspect, is because the TitleCode
		property is already specified as a "key-property" above.-->
		<many-to-one name="Title" class="CAESDO.Esra.Core.Domain.Title, CAESDO.Esra.Core" cascade="none" column="TitleCode" insert="false" update="false"/>
			
		<!--Apparently these properties need to be specified here as well as "key-property" above in "composite-id"
		 in order to be able to set it in the object to do a GetByExample fetch; otherwise, 
		 I cannot set the TitleCode to the correct title code or the EffectiveDate to the correct date I want to search on.-->
		<property name="TitleCode" column="TitleCode" update="false" insert="false"/>
		<property name="EffectiveDate" column="EffectiveDate" update="false" insert="false"/>
		<property name="SalaryGrade" column ="SalaryGrade" />
		<property name="BargainingCode" column="BargainingCode" />
    <property name="NumSalarySteps" column="NumSalarySteps" />
		<property name="LaborMarketWAS" column="LaborMarketWAS" />
		<property name="LaborMarketMidAnnual" column="LaborMarketMidAnnual" />
		<property name="CollegeAverageAnnual" column="CollegeAvgAnnual" />
		<property name="CampusAverageAnnual" column="CampusAvgAnnual" />

		<!-- Apparently, this relationship also has to be specified as insert="false" update="false" in order to avoid the 
		duplicate field update/insert issue, since SalaryGrade and Effective date are already specified as fields by
		virture of their presence as a key-property in the composite-id section. -->
		<many-to-one name="SalaryGradeQuartiles" class="CAESDO.Esra.Core.Domain.SalaryGradeQuartiles, CAESDO.Esra.Core"
					 insert="false" update="false" cascade="none" unique="true">
			<column name="SalaryGrade" />
			<column name="EffectiveDate"/>
		</many-to-one>
					
		<bag name="SalarySteps" table="SalarySteps" inverse="true" cascade="delete-orphan" order-by="Annual">
			<key>
				<column name="TitleCode" />
				<column name="EffectiveDate"/>
			</key> 
			<one-to-many class="CAESDO.Esra.Core.Domain.SalaryStep, CAESDO.Esra.Core" />
		</bag>

	</class>
</hibernate-mapping>